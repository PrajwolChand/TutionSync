/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fees_management_system;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author prajwol
 */
public class AccountantLogin extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public AccountantLogin() {
        initComponents();
    }

 void userVerification(int accountant_Id, String password) {
    try {
        // Step 1: Encrypt the user's entered password before verification
        String encryptedPassword = encryptPassword(password);

        Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
        Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/fees_management", "root", "root");

        // Step 2: Modify the SQL query to check the encrypted password
        String sql = "SELECT * FROM accountant_details WHERE accountant_id = ? AND password = ?";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setInt(1, accountant_Id);
        pst.setString(2, encryptedPassword); // Use the encrypted password for comparison

        ResultSet rs = pst.executeQuery();
        if (rs.next()) {
            JOptionPane.showMessageDialog(this, "Login Successful");

            // Insert the active accountant into the active_accountant table
            insertActiveAccountant();

            // Navigate to the home screen
            home h = new home();
            h.show();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Wrong ID or password");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}

void insertActiveAccountant() {
    try {
        // Load the JDBC driver
        Class.forName("org.apache.derby.jdbc.EmbeddedDriver");

        // Establish a connection to the database
        Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/fees_management", "root", "root");

        // Prepare the SQL INSERT statement
        String sql = "INSERT INTO active_accountant (id) VALUES (?)";
        PreparedStatement pst = con.prepareStatement(sql);

        // Retrieve the accountant ID from txtIdlNo (assumed to be a JTextField)
        int accountantId = Integer.parseInt(txtIdlNo.getText()); // Get the ID from the text field

        // Set the value for the id column in the prepared statement
        pst.setInt(1, accountantId);

        // Execute the insertion
        int rowsAffected = pst.executeUpdate();

        // Provide feedback to the user
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Accountant ID inserted into active_accountant table successfully.");
        } else {
            JOptionPane.showMessageDialog(this, "Failed to insert accountant ID.");
        }

        // Close the connection
        con.close();
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}

// Custom encryption algorithm using substitution and XOR operations
String encryptPassword(String password) {
    int shift = 3; // Shift value for substitution
    int key = 7;   // XOR key

    StringBuilder encryptedPassword = new StringBuilder();
    for (char c : password.toCharArray()) {
        // Step 1: Substitution - Shift the character's ASCII value
        char substitutedChar = (char) (c + shift);
        
        // Step 2: XOR operation with the key
        char encryptedChar = (char) (substitutedChar ^ key);

        // Append the encrypted character to the result
        encryptedPassword.append(encryptedChar);
    }

    return encryptedPassword.toString();
}


    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIdlNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnExit = new javax.swing.JButton();
        btnLogin = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(250, 171, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(124, 16, 52));
        jLabel1.setText("Enter Password:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 200, -1));

        txtIdlNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdlNoActionPerformed(evt);
            }
        });
        jPanel1.add(txtIdlNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 250, 30));

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(124, 16, 52));
        jLabel4.setText("Enter Id No:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 200, -1));
        jPanel1.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 250, 30));

        btnExit.setBackground(new java.awt.Color(124, 16, 52));
        btnExit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fees_management_system/images/exit.png"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel1.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, 150, 50));

        btnLogin.setBackground(new java.awt.Color(124, 16, 52));
        btnLogin.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fees_management_system/images/login.png"))); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        jPanel1.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, 150, 50));

        lblError.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 51, 51));
        jPanel1.add(lblError, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 260, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 650, 400));

        jPanel2.setBackground(new java.awt.Color(124, 16, 52));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Accountant Login");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fees_management_system/images/tutionsync white (4).png"))); // NOI18N
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 100, 100));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 110));

        setSize(new java.awt.Dimension(661, 543));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdlNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdlNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdlNoActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String managerIdText = txtIdlNo.getText().trim();  // Get manager ID as text and trim spaces
String password = txtPassword.getText().trim();    // Get password and trim spaces

if(managerIdText.equals("") || password.equals("")) {
    lblError.setText("Please enter ID and password");
} else {
    try {
        int manager_Id = Integer.parseInt(managerIdText);  // Convert to integer
        userVerification(manager_Id, password);  // Proceed with verification
    } catch (NumberFormatException e) {
        lblError.setText("Please enter a valid numeric ID");
        e.printStackTrace();
    }
}

    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        
         int a=JOptionPane.showConfirmDialog(null,"Do you really want to Exit Application","Select",JOptionPane.YES_NO_OPTION);
        if(a==0)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed
//to
    /* private void CheckPasswordActionPerformed(java.awt.event.ActionEvent evt) {                                              
        if(CheckPassword.isSelected())
        {
            txtPassword.setEchoChar((char)0);  
        }
        else
            txtPassword.setEchoChar('*');
    
    }                                             
*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountantLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountantLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountantLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountantLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccountantLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblError;
    private javax.swing.JTextField txtIdlNo;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
}
